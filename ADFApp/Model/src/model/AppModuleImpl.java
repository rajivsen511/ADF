
package model;


import model.common.AppModule;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 09 13:38:21 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }


    /**
     * Container's getter for EmployeeRVO1.
     * @return EmployeeRVO1
     */
    public EmployeeRVOImpl getEmployeeRVO1() {
        return (EmployeeRVOImpl) findViewObject("EmployeeRVO1");
    }

    /**
     * Container's getter for EmployeeVO1.
     * @return EmployeeVO1
     */
    public ViewObjectImpl getEmployeeVO1() {
        return (ViewObjectImpl) findViewObject("EmployeeVO1");
    }
    public EmployeeRVOImpl getemployeeRVO1() {
        return (EmployeeRVOImpl) findViewObject("EmployeeRVO1");
    }
    public String SearchEmployee(Integer employeeID){
    try{
            ViewObjectImpl EmployeeRVO1 = this.getemployeeRVO1();
            if(EmployeeRVO1 != null){
                EmployeeRVO1.setApplyViewCriteriaName("EmployeeRVOCriteria");
                EmployeeRVO1.setNamedWhereClauseParam("BindEmployeeId",employeeID);
            }
    EmployeeRVO1.executeQuery();
                                  
    }
            catch (Exception e){
                
           System.out.println("Exception in SearchEmployee"); 
        }return "";
    }
    public String createEmployeeRow(){
        try{
        ViewObject employeeVO1 = this.getEmployeeVO1();
        Row employeeRow=employeeVO1.createRow();
        
    
       employeeVO1.insertRow(employeeRow);
        }catch(Exception e){
            System.out.println("Exception occured while creating new row"+e);
        }
    return "";
    }
    public String saveEmployeeRow(){
        try{
            getDBTransaction().commit();
        }
        catch(Exception e) {
                                 System.out.println("Exception"+e);
                                 
                             }return "";
        }

    /**
     * Container's getter for DepartmentsRVO1.
     * @return DepartmentsRVO1
     */
    public DepartmentsRVOImpl getDepartmentsRVO1() {
        return (DepartmentsRVOImpl) findViewObject("DepartmentsRVO1");
    }
    public String createEmployeeRow1(){
        try{
        ViewObject employeeVO1 = this.getEmployeeVO1();
        Row employeeRow=employeeVO1.createRow();
        
    
       employeeVO1.insertRow(employeeRow);
        }catch(Exception e){
            System.out.println("Exception occured while creating new row"+e);
        }
    return "";
    }
    public String saveEmployeeRow1(){
        try{
            getDBTransaction().commit();
        }
        catch(Exception e) {
                                 System.out.println("Exception"+e);
                                 
                             }return "";
        }

    /**
     * Container's getter for DepartmentsVO1.
     * @return DepartmentsVO1
     */
    public ViewObjectImpl getDepartmentsVO1() {
        return (ViewObjectImpl) findViewObject("DepartmentsVO1");
    }
}

